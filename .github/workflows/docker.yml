name: 'Build basic docker container'

on:
  schedule:
    - cron: 0 7 * * THU
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs: {}

jobs:
  docker:
    name: 'Build docker container'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - name: mariadb
            context: ./containers/mariadb
            target: 'mariadb'
            version: '10.10'
            build-args: ''
            spec-file: ''
          - name: mariadb
            context: ./containers/mariadb
            target: 'mariadb_106'
            version: '10.6'
            build-args: ''
            spec-file: ''
          - name: mariadb
            context: ./containers/mariadb
            target: 'mariadb_103'
            version: '10.3'
            build-args: ''
            spec-file: ''
          - name: mysql
            context: ./containers/mysql
            target: ''
            version: ''
            build-args: ''
            spec-file: ''
          - name: proxy
            context: ./containers/proxy
            target: ''
            version: ''
            build-args: ''
            spec-file: ''
          - name: rabbitmq
            context: ./containers/rabbitmq
            target: ''
            version: ''
            build-args: ''
            spec-file: ''
          - name: redis
            context: ./containers/redis
            target: ''
            version: ''
            build-args: ''
            spec-file: ''
          - name: solr
            context: ./containers/solr
            target: ''
            version: ''
            build-args: ''
            spec-file: ''
          - name: varnish
            context: ./containers/varnish
            target: ''
            version: ''
            build-args: ''
            spec-file: ''
          - name: elasticsearch
            context: ./containers/elasticsearch
            target: ''
            version: ''
            build-args: ''
            spec-file: ''
          - name: webserver-neos
            context: ./containers/webserver
            target: 'webserver-neos'
            version: ''
            build-args: ''
            spec-file: ''
          - name: webserver-typo3
            context: ./containers/webserver
            target: 'webserver-typo3'
            version: ''
            build-args: ''
            spec-file: ''
          - name: webserver-shopware
            context: ./containers/webserver
            target: 'webserver-shopware'
            version: ''
            build-args: ''
            spec-file: ''
          - name: webserver-shopware6
            context: ./containers/webserver
            target: 'webserver-shopware6'
            version: ''
            build-args: ''
            spec-file: ''
          - name: webserver-static
            context: ./containers/webserver
            target: 'webserver-static'
            version: ''
            build-args: ''
            spec-file: ''
          - name: webserver-symfony
            context: ./containers/webserver
            target: 'webserver-symfony'
            version: ''
            build-args: ''
            spec-file: ''
          - name: chromium
            context: ./containers/chromium
            target: 'chromium'
            version: 'stable'
            build-args: ''
            spec-file: ''
          - name: mailhog
            context: ./containers/mailhog
            target: 'mailhog'
            version: '1.1.0'
            build-args: ''
            spec-file: ''
          - name: cfssl
            context: ./containers/cfssl
            target: 'cfssl'
            version: '1.6'
            build-args: ''
            spec-file: ''
          - name: cfssl-server
            context: ./containers/cfssl
            target: 'cfssl-server'
            version: '1.6'
            build-args: ''
            spec-file: ''
          - name: tideways-daemon
            context: ./containers/tideways-daemon
            target: 'tideways-daemon'
            version: '1.8'
            build-args: ''
            spec-file: ''
          - name: docker-proxy
            context: ./containers/docker-proxy
            target: 'docker-proxy'
            version: 'latest'
            build-args: ''
            spec-file: ''
          - name: styleguide
            context: ./containers/styleguide
            target: ''
            version: ''
            build-args: ''
            spec-file: ''
          - name: php-fpm
            context: ./containers/php
            target: 'php-fpm'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
            spec-file: ''
          - name: php-fpm-dev
            context: ./containers/php
            target: 'php-fpm-dev'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
            spec-file: ''
          - name: php-cli
            context: ./containers/php
            target: 'php-cli'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
            spec-file: ''
          - name: php-cli-dev
            context: ./containers/php
            target: 'php-cli-dev'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
            spec-file: ''
          - name: php-cron
            context: ./containers/php
            target: 'php-cron'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
            spec-file: ''
          - name: php-supervisor
            context: ./containers/php
            target: 'php-supervisor'
            version: 7.2
            build-args: |
              PHP_VERSION=7.2
              UBUNTU_VERSION=18.04
            spec-file: ''
          - name: php-fpm
            context: ./containers/php
            target: 'php-fpm'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
            spec-file: 'php/php-fpm_7_4_spec.rb'
          - name: php-fpm-dev
            context: ./containers/php
            target: 'php-fpm-dev'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
            spec-file: ''
          - name: php-cli
            context: ./containers/php
            target: 'php-cli'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
            spec-file: ''
          - name: php-cli-dev
            context: ./containers/php
            target: 'php-cli-dev'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
            spec-file: ''
          - name: php-cron
            context: ./containers/php
            target: 'php-cron'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
            spec-file: ''
          - name: php-supervisor
            context: ./containers/php
            target: 'php-supervisor'
            version: 7.4
            build-args: |
              PHP_VERSION=7.4
              UBUNTU_VERSION=20.04
            spec-file: ''
          - name: php-fpm
            context: ./containers/php
            target: 'php-fpm'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-fpm-dev
            context: ./containers/php
            target: 'php-fpm-dev'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-cli
            context: ./containers/php
            target: 'php-cli'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-cli-dev
            context: ./containers/php
            target: 'php-cli-dev'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-cron
            context: ./containers/php
            target: 'php-cron'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-supervisor
            context: ./containers/php
            target: 'php-supervisor'
            version: 8.1
            build-args: |
              PHP_VERSION=8.1
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-fpm
            context: ./containers/php
            target: 'php-fpm'
            version: 8.2
            file: 8.2.dockerfile
            build-args: |
              PHP_VERSION=8.2
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-fpm-dev
            context: ./containers/php
            target: 'php-fpm-dev'
            version: 8.2
            file: 8.2.dockerfile
            build-args: |
              PHP_VERSION=8.2
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-cli
            context: ./containers/php
            target: 'php-cli'
            version: 8.2
            file: 8.2.dockerfile
            build-args: |
              PHP_VERSION=8.2
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-cli-dev
            context: ./containers/php
            target: 'php-cli-dev'
            version: 8.2
            file: 8.2.dockerfile
            build-args: |
              PHP_VERSION=8.2
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-cron
            context: ./containers/php
            target: 'php-cron'
            version: 8.2
            file: 8.2.dockerfile
            build-args: |
              PHP_VERSION=8.2
              UBUNTU_VERSION=22.04
            spec-file: ''
          - name: php-supervisor
            context: ./containers/php
            target: 'php-supervisor'
            version: 8.2
            file: 8.2.dockerfile
            build-args: |
              PHP_VERSION=8.2
              UBUNTU_VERSION=22.04
            spec-file: ''

    env:
      DOCKER_IMAGE: ghcr.io/netlogix/docker/${{ matrix.image.name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Read version from dockerfile or matrix
        id: docker
        run: echo "version=$(./extract-version.sh ${{ matrix.image.context }}/Dockerfile ${{ matrix.image.version }})" >> $GITHUB_OUTPUT

      - name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ matrix.image.context }}
          target: ${{ matrix.image.target }}
          file: ${{ matrix.image.context }}/${{ matrix.image.file || 'Dockerfile' }}
          build-args: ${{ matrix.image.build-args }}
          push: false
          tags: ${{ env.DOCKER_IMAGE }}:latest,${{ env.DOCKER_IMAGE }}:${{ steps.docker.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha, scope=${{ github.workflow }}-${{ matrix.image.name }}-${{ matrix.image.version }}
          cache-to: type=gha, scope=${{ github.workflow }}-${{ matrix.image.name }}-${{ matrix.image.version }}, mode=max

      - name: Test
        id: docker_test
        if: matrix.image.spec-file != ''
        run: ./test-container.sh ${{ matrix.image.spec-file }}

      - name: Push
        id: docker_push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ matrix.image.context }}
          target: ${{ matrix.image.target }}
          file: ${{ matrix.image.context }}/${{ matrix.image.file || 'Dockerfile' }}
          build-args: ${{ matrix.image.build-args }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_IMAGE }}:latest,${{ env.DOCKER_IMAGE }}:${{ steps.docker.outputs.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha, scope=${{ github.workflow }}-${{ matrix.image.name }}-${{ matrix.image.version }}
          cache-to: type=gha, scope=${{ github.workflow }}-${{ matrix.image.name }}-${{ matrix.image.version }}, mode=max
